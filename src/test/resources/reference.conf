#akka {
#  loggers = [akka.event.slf4j.Slf4jLogger]
#  loglevel = debug

#  akka.extensions = ["akka.contrib.pattern.ClusterReceptionistExtension"]

#  actor {
#    provider = "akka.cluster.ClusterActorRefProvider"
#    debug {
#      receive = on
#      lifecycle = on
#    }
#  }
 # remote {
 #   log-remote-lifecycle-events = on
 #   netty.tcp {
 #     hostname = ${processor.ip}
 #     port = ${processor.port}
 #   }
 # }
 # cluster {
 #   seed-nodes = [
 #     "akka.tcp://"${processor.cluster.name}"@"${processor.seed-ip}":"${processor.seed-port}
 #   ]
 #   auto-down-unreachable-after = 10s


  #  failure-detector {

      # FQCN of the failure detector implementation.
      # It must implement akka.remote.FailureDetector and have
      # a public constructor with a com.typesafe.config.Config and
      # akka.actor.EventStream parameter.
   #   implementation-class = "akka.remote.PhiAccrualFailureDetector"

      # How often keep-alive heartbeat messages should be sent to each connection.
    ##  heartbeat-interval = 120 s
   # }

  #}
#}

processor {
  ip = "127.0.0.1"
  ip = ${?CLUSTER_IP}
  port = 1600
  port = ${?CLUSTER_PORT}
  seed-ip = "127.0.0.1"
  seed-ip = ${?CLUSTER_IP}
  seed-ip = ${?SEED_PORT_1600_TCP_ADDR}
  seed-port = 1600
  seed-port = ${?SEED_PORT_1600_TCP_PORT}
  cluster.name = ClusterSystemTest
}